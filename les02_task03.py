# Задание на закрепление знаний по модулю yaml. Написать скрипт, автоматизирующий сохранение данных в
# файле YAML-формата. Для этого:
# Подготовить данные для записи в виде словаря, в котором первому ключу соответствует список, второму — целое число,
# третьему — вложенный словарь, где значение каждого ключа — это целое число с юникод-символом, отсутствующим в
# кодировке ASCII (например, €);
# Реализовать сохранение данных в файл формата YAML — например, в файл file.yaml. При этом обеспечить стилизацию файла
# с помощью параметра default_flow_style, а также установить возможность работы с юникодом: allow_unicode = True;
# Реализовать считывание данных из созданного файла и проверить, совпадают ли они с исходными.
import yaml

yaml_data = {
    'key1': ['listval1', 'listval2', 'listval3'],
    'key2': 345,
    'key3': {'subkey1': '34®', 'subkey2': '2Ÿ', 'subkey3': '54¡'}
}
# print(yaml_data)
# Запись в файл:
with open('file.yaml', 'w', encoding='utf-8') as yaml_file:     # Символы не из ASCII кодируются при записи в файл.
    yaml.dump(yaml_data, yaml_file, encoding='utf-8', default_flow_style=False)
# Чтение из файла:
with open('file.yaml', encoding='utf-8') as yaml_file:
    yaml_data_new = yaml.load(yaml_file)
    # print(yaml_data_new)
# Визуально выводы до сохранения в файл и после чтения из сохраненного файла совпадают. Проверим:
if yaml_data == yaml_data_new:
    print("Данные до и после сохранения идентичны")
else:
    print("Данные до и после сохранения не идентичны")
